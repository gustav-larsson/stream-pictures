@use '~@angular/material' as mat;
@use './home-screen/home-screen.component.scss' as home-screen;
@use './configurator/configurator.component.scss' as configurator;
@use './login-screen/login-screen.component.scss' as login;

@include mat.core();

$my-primary: mat.define-palette(mat.$teal-palette, 500);
$my-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);
$my-dark-primary: mat.define-palette(mat.$teal-palette, 500);
$my-dark-accent: mat.define-palette(mat.$green-palette, A200, A100, A400);

$my-dark-theme: mat.define-dark-theme((
 color: (
   primary: $my-dark-primary,
   accent: $my-dark-accent,
 )
));
$my-light-theme: mat.define-light-theme((
 color: (
   primary: $my-primary,
   accent: $my-accent,
 )
));

// Emit theme-dependent styles for common features used across multiple components.
@include mat.core-theme($my-dark-theme);
@include mat.all-component-themes($my-light-theme);
@include home-screen.theme($my-light-theme);
@include configurator.theme($my-light-theme);
@include login.theme($my-light-theme);
// Emit styles for MatButton based on `$my-theme`. Because the configuration
// passed to `define-light-theme` omits typography, `button-theme` will not
// emit any typography styles.
.my-dark-theme {
  @include mat.all-component-themes($my-dark-theme);
  @include home-screen.theme($my-dark-theme);
  @include configurator.theme($my-dark-theme);
  @include login.theme($my-dark-theme);
}
// Include the theme mixins for other components you use here.
